@model EmailManager.Models.ViewModels.EditEmailViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h1>@Model.Heading</h1>

@if (Model.Email.Id != 0)
{
    <button class="btn btn-primary mb-3" onclick='window.location.href="@Url.Action("EmailAttachment","Home", new {emailId=Model.Email.Id})"'>Dodaj załącznik</button>
    <button class="btn btn-secondary mb-3" onclick="generatePdf()">Generuj PDF</button>
    <button class="btn btn-secondary mb-3" onclick='window.location.href="@Url.Action("EmailTemplate","EmailSending", new {emailId=Model.Email.Id})"'>Podgląd Email</button>
    <button class="btn btn-secondary mb-3" onclick="printEmail()">Drukuj Email</button>
}

<div class="row">
    <div class="col-lg-6">
        @using (Html.BeginForm("Email", "Home"))
        {

            if (Model.Email.Id == 0)
            {
                <p class="alert alert-info mt-4 mb-4">Pola tytuł, odbiorca i data wysłania wiadomości są <strong>wymagane</strong></p>
            }

            @Html.HiddenFor(x => x.Email.Id)
            @Html.HiddenFor(x => x.Email.UserId)
            @Html.HiddenFor(x => x.Email.AttachmentId)

            <div class="form-group">
                @Html.LabelFor(x => x.Email.SenderId)
                @Html.DropDownListFor(x => x.Email.SenderId,
               new SelectList(Model.Senders,
               "Id", "Name"), "-- Wybierz nadawcę --",
               new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Email.SenderId)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Email.MessageSubject)
                @Html.TextBoxFor(x => x.Email.MessageSubject, new { @class = "form-control", autofocus = "autofocus" })
                @Html.ValidationMessageFor(x => x.Email.MessageSubject)
            </div>


            <div class="form-group">
                @Html.LabelFor(x => x.Email.ReceiverId)
                @Html.DropDownListFor(x => x.Email.ReceiverId, new SelectList(Model.Receivers, "Id", "Name"), "-- Wybierz odbiorcę --", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Email.ReceiverId)
            </div>

            @*<div class="form-group">
                @Html.LabelFor(x => x.Email.ReceiverCCId)
                @Html.DropDownListFor(x => x.Email.ReceiverCCId, new SelectList(Model.Receivers, "Id", "Name"), "-- Wybierz odbiorcę DW --", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Email.ReceiverCCId)
            </div>*@

            <div class="form-group">
                @Html.LabelFor(x => x.Email.EmailSendDate)
                @Html.TextBoxFor(x => x.Email.EmailSendDate, "{0:dd-MM-yyy}", new { @class = "form-control", @id = "EmailSendDate", autocomplete = "off" })
                @Html.ValidationMessageFor(x => x.Email.EmailSendDate)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Email.MessageBody)
                @Html.TextAreaFor(x => x.Email.MessageBody, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Email.FooterId)
                @Html.DropDownListFor(x => x.Email.FooterId, new SelectList(Model.Footers, "Id", "ComplimentaryClose"), "-- Wybierz stopkę --", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Email.FooterId)
            </div>



            <div class="btn-lg mt-5 mb-5">
                <button class="btn btn-primary" type="submit">Zapisz</button>
                <button class="btn btn-secondary" onclick='window.location.href="@Url.Action("SendEmail","EmailSending")"'>Wyślij</button>
                @*<button class="btn btn-secondary" onclick=@{((EmailManager.Controllers.EmailSendingController)ViewContext.Controller).SendEmailMethode().RunSynchronously();}>Wyślij2</button>*@


            </div>
        }

    </div>

    <div class="col-5 offset-lg-1">

        @*@if (Model.Email.Id != 0)
            {
            }*@
        @Html.Partial("_EmailAttachment", Model.Email.Attachments)


    </div>
</div>

@section Scripts
{
    <script type="text/javascript">

        function generatePdf() {

        }

        function printEmail() {

        }

        function deleteAttachment(attach_id,email_id, btn) {

            if (!confirm("Czy na pewno chcesz usunąć załącznik?"))
                return;

            $.ajax({
                type: 'POST',
                url: "@Url.Action("DeleteAttachment","Home")",
                data: {
                    emailId: email_id,
                    id: attach_id
                },
                success: function (data)
                {
                    if (data.Success) {
                        var row = btn.parentNode.parentNode;
                        row.parentNode.removeChild(row);
                    }
                    else
                    {
                        alert(data.Message);
                    }
                },
                error: function (data)
                {
                    alert(data.Message);
                },
                dataType:'json'

                });

        }

        $(document).ready(function () {

            $('#EmailSendDate').datepicker({
                format: "dd-mm-yyyy",
                language: "pl-PL",
                multidate: false,
                autoclose: true,
                todayHighlight: true,
                startDate: '-3d',
                weekStart: 1,
                todayBtn: true,
                forceParse: false
            });
        });

    </script>

}