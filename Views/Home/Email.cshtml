@model EmailManager.Models.ViewModels.EditEmailViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h1>@Model.Heading</h1>

@if (Model.Email.Id != 0)
{
    <button class="btn btn-primary mb-3" onclick='window.location.href="@Url.Action("Attachment","Home", new {emailId=Model.Email.Id})"'>Dodaj załącznik</button>
    <button class="btn btn-secondary mb-3" onclick="generatePdf()">Generuj PDF</button>
    <button class="btn btn-secondary mb-3" onclick='window.location.href="@Url.Action("EmailTemplate","Print", new {emailId=Model.Email.Id})"'>Podgląd Email</button>
    <button class="btn btn-secondary mb-3" onclick="printEmail()">Drukuj Email</button>
}

<div class="row">
    <div class="col-lg-6">
        @using (Html.BeginForm("Email", "Home"))
        {

            if (Model.Email.Id == 0)
            {
                <p class="alert alert-info mt-4 mb-4">Pola tytuł, odbiorca i data wysłania wiadomości są <strong>wymagane</strong></p>
            }

            @Html.HiddenFor(x => x.Email.Id)
            @Html.HiddenFor(x => x.Email.UserId)

            <div class="form-group">
                @Html.LabelFor(x => x.Email.Sender.SenderPersonalDataId)
                @Html.DropDownListFor(x => x.Email.Sender.SenderPersonalDataId,
               new SelectList(Model.Senders,
               "Id", "UserId"), "-- Wybierz nadawcę --",
               new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Email.Sender.SenderPersonalDataId)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Email.MessageSubject)
                @Html.TextBoxFor(x => x.Email.MessageSubject, new { @class = "form-control", autofocus = "autofocus" })
                @Html.ValidationMessageFor(x => x.Email.MessageSubject)
            </div>


            <div class="form-group">
                @Html.LabelFor(x => x.Email.Receivers)
                @Html.DropDownListFor(x => x.Email.Receivers, new SelectList(Model.Receivers, "Id", "Name"), "-- Wybierz odbiorcę --", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Email.Receivers)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Email.EmailSendDate)
                @Html.TextBoxFor(x => x.Email.EmailSendDate, "{0:dd-MM-yyy}", new { @class = "form-control", @id = "EmailSendDate", autocomplete = "off" })
                @Html.ValidationMessageFor(x => x.Email.EmailSendDate)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Email.MessageBody)
                @Html.TextAreaFor(x => x.Email.MessageBody, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Email.Footer)
                @Html.DropDownListFor(x => x.Email.Footer, new SelectList(Model.Footers, "Id", "ComplimentaryClose"), "-- Wybierz stopkę --", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Email.Footer)
            </div>


        }

        <div class="btn-lg mt-5 mb-5">
            <button class="btn btn-primary" type="submit">Zapisz</button>
            <button class="btn btn-secondary" type="submit">Wyślij</button>
            <button class="btn btn-secondary" onclick='window.location.href="@Url.Action("SendEmail","EmailSending")"'>Wyślij1</button>
            @*<button class="btn btn-secondary" onclick=@{((EmailManager.Controllers.EmailSendingController)ViewContext.Controller).SendEmailMethode().RunSynchronously();}>Wyślij2</button>*@


        </div>

    </div>

    <div class="col-5 offset-lg-1">

        @*@if (Model.Email.Id != 0)
        {
        }*@
        @Html.Partial("_EmailAttachment", Model.Email.Attachments)

        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div>
                @Html.LabelFor(x => x.Email.AttachmentId)
                @Html.TextBoxFor(x => x.Attachments, new { type = "attachment", @class = "form-control", @Value = "Wybierz załącznik" })
                @Html.ValidationMessageFor(x => x.Email.AttachmentId)
            </div>
            <div>
                @Html.LabelFor(x => x.Email.AttachmentId)
                @Html.TextBoxFor(x => x.Attachments, new { type = "attachment", @class = "form-control", @Value = "Wybierz załącznik" })
            </div>
            <div>
                @Html.LabelFor(x => x.Email.AttachmentId)
                @Html.TextBoxFor(x => x.Attachments, new { type = "attachment", @class = "form-control", @Value = "Wybierz załącznik" })
            </div>

            <button class="btn btn-primary btn-lg mt-5 mb-5" type="submit">Załącz do maila</button>
        }
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">

        function generatePdf() {

        }

        function printEmail() {

        }



        $(document).ready(function () {

            $('#EmailSendDate').datepicker({
                format: "dd-mm-yyyy",
                language: "pl-PL",
                multidate: false,
                autoclose: true,
                todayHighlight: true,
                startDate: '-3d',
                weekStart: 1,
                todayBtn: true,
                forceParse: false
            });
        });

    </script>

}